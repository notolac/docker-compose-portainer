---
services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    ports:
      - "${N8N_HTTP_PORT:-5678}:${N8N_PORT:-5678}"
    environment:
      # —— Core de n8n expuesto detrás de NPM ——
      - NODE_ENV=production
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=http                 # TLS lo termina NPM
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
      - N8N_SECURE_COOKIE=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      # —— Task Runners (broker dentro de este contenedor) ——
      - N8N_RUNNERS_ENABLED=true
      - N8N_RUNNERS_MODE=external
      - N8N_RUNNERS_AUTH_TOKEN=${N8N_RUNNERS_AUTH_TOKEN}
      - N8N_RUNNERS_BROKER_LISTEN_ADDRESS=0.0.0.0
      # (opcional) endurecimiento para Code node:
      # - NODE_FUNCTION_ALLOW_EXTERNAL=
      # - NODE_FUNCTION_ALLOW_BUILTIN=
      # Telemetría (opcional desactivar):
      # - N8N_DIAGNOSTICS_ENABLED=false
    volumes:
      - ${N8N_DATA_DIR:-/srv/n8n}:/home/node/.n8n
    # No es necesario exponer el puerto 5679 del broker: la red interna del compose lo resuelve

  # Runner externo (misma imagen, comando diferente)
  n8n-runner:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    depends_on:
      - n8n
    command: ["/usr/local/bin/task-runner-launcher", "javascript"]
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
      - N8N_RUNNERS_AUTH_TOKEN=${N8N_RUNNERS_AUTH_TOKEN}
      - N8N_RUNNERS_TASK_BROKER_URI=http://n8n:5679
      - N8N_RUNNERS_MAX_CONCURRENCY=${N8N_RUNNERS_MAX_CONCURRENCY:-5}
      - N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT=${N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT:-15}
      # Limitar RAM del proceso runner si quieres:
      # - NODE_OPTIONS=--max-old-space-size=1024
    # (Opcional) healthcheck del launcher expone 5680 internamente
    # ports:
    #   - "5680:5680"
