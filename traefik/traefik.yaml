---
networks:
  edge:
    driver: bridge
    attachable: true
  default:
    name: traefik-stack

services:
  traefik:
    image: traefik:v3.5
    restart: unless-stopped
    networks: [edge, default]
    ports:
      - "${WEB_PORT:-80}:80"
      - "${WEBSECURE_PORT:-443}:443"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # ACME DNS-01 con Cloudflare
      - --certificatesresolvers.cf_all.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.cf_all.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.cf_all.acme.dnschallenge=true
      - --certificatesresolvers.cf_all.acme.dnschallenge.provider=cloudflare
      # Confiar solo IPs de Cloudflare (forwarded headers)
      - --entrypoints.websecure.forwardedheaders.trustedips=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      # Logs â†’ archivo (GoAccess) y lectura por Promtail
      - --accesslog=true
      - --accesslog.format=common         # CLF compatible con GoAccess
      - --accesslog.filepath=/logs/access.log
      - --accesslog.bufferingsize=100
      - --log.level=INFO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${LETSENCRYPT_DIR}:/letsencrypt
      - ${TRAEFIK_LOG_DIR}:/logs
      - ${TRAEFIK_CFG_DIR}:/etc/traefik/dynamic:ro
    labels:
      # Middlewares de seguridad (equivalente a tu _hsts.conf)
      - traefik.http.middlewares.secureHeaders.headers.stsSeconds=63072000
      - traefik.http.middlewares.secureHeaders.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.secureHeaders.headers.stsPreload=true
      - traefik.http.middlewares.secureHeaders.headers.contentTypeNosniff=true
      - traefik.http.middlewares.secureHeaders.headers.customResponseHeaders.X-XSS-Protection=1; mode=block
      - traefik.http.middlewares.secureHeaders.headers.frameDeny=true
      - traefik.http.middlewares.secureHeaders.headers.referrerPolicy=strict-origin-when-cross-origin
      - traefik.http.middlewares.secureHeaders.headers.customResponseHeaders.Content-Security-Policy=upgrade-insecure-requests
      - traefik.http.middlewares.secureHeaders.headers.customResponseHeaders.Permissions-Policy=interest-cohort=()
      - traefik.http.middlewares.secureHeaders.headers.customResponseHeaders.Expect-CT=enforce; max-age=604800
      - traefik.http.middlewares.secureHeaders.headers.customResponseHeaders.Server=Proxy
      - traefik.http.middlewares.ratelimit.ratelimit.average=100
      - traefik.http.middlewares.ratelimit.ratelimit.burst=200

  goaccess:
    image: allinurl/goaccess:latest
    restart: unless-stopped
    depends_on: [traefik]
    networks: [default]
    ports:
      - "${GOA_PORT}:${GOA_PORT}"
    command: >
      /bin/sh -c "
      mkdir -p /work &&
      touch /logs/access.log &&
      goaccess /logs/access.log
      --log-format=COMBINED
      --real-time-html
      --daemonize
      --ws-url=ws://0.0.0.0:${GOA_PORT}
      --addr=${GOA_ADDR}
      --port=${GOA_PORT}
      --html-report-title='Traefik Access (GoAccess)'
      --keep-last=90
      --persist
      &&
      tail -f /dev/null"
    volumes:
      - ${TRAEFIK_LOG_DIR}:/logs:ro

  loki:
    image: grafana/loki:3.5.3
    restart: unless-stopped
    networks: [default]
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "${LOKI_HTTP_LISTEN_PORT}:3100"
    volumes:
      - ${LOKI_CFG}:/etc/loki/local-config.yaml:ro
      - ${LOKI_DATA_DIR}:/loki

  promtail:
    image: grafana/promtail:3.5.3
    restart: unless-stopped
    networks: [default]
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ${PROMTAIL_CFG}:/etc/promtail/config.yml:ro
      - ${TRAEFIK_LOG_DIR}:/var/log/traefik:ro
      - ${PROMTAIL_POS_DIR}:/tmp

  whoami:
    image: traefik/whoami:v1.10
    restart: unless-stopped
    networks: ["traefik-stack","edge"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.who.rule=Host(`whoami.notolac.org`)
      - traefik.http.routers.who.entrypoints=websecure
      - traefik.http.routers.who.tls.certresolver=cf_all
      - traefik.http.routers.who.middlewares=secureHeaders
